<%- contentFor('HeaderCss') %> <%- contentFor('breadcrumb') %>
<style>
  .map {
    height: 500px;
    width: 100%;
  }
  .map2 {
    height: 500px;
    width: 100%;
    display: none;
  }
</style>

<div class="row">
  <div class="col-12">
    <div
      class="page-title-box d-flex align-items-center justify-content-between"
    >
      <h4 class="mb-0">Location</h4>

      <div class="page-title-right">
        <ol class="breadcrumb m-0">
          <li class="breadcrumb-item">
            <a href="javascript:void(0);">Events</a>
          </li>
          <li class="breadcrumb-item active">Location</li>
        </ol>
      </div>
    </div>
  </div>
</div>

<%- contentFor('body') %> <% if (message && message.length > 0) { %>
<ul class="errors">
  <li><%= message %></li>
</ul>
<% } %>

<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-header">
        <a href="/events" class="back-button">
          <button
            type="button"
            class="btn btn-success btn-rounded waves-effect waves-light mb-2 me-2"
          >
            <i
              class="mdi mdi-arrow-left-thick me-1"
              style="font-size: 14px"
            ></i>
            Back
          </button>
        </a>

        <h4 class="card-title">Location</h4>
        <p class="card-title-desc">Change location of event</p>
      </div>

      <form method="post" action="/event/location/<%= formData._id %>">
        <div class="card-body">
          <div class="mb-3 row">
            <label for="example-text-input" class="col-md-2 col-form-label">
              Event title
            </label>
            <div class="col-md-10">
              <h3><%= formData && formData.name ? formData.name : '' %></h3>
            </div>
          </div>

          <div class="mb-3 row">
            <label for="example-text-input" class="col-md-2 col-form-label">
              Location (name)<b style="color: red">*</b>
            </label>
            <div class="col-md-10">
              <input
                class="form-control"
                type="text"
                name="name"
                value="<%= formData && formData.location ? formData.location.description : '' %>"
              />
            </div>
          </div>

          <div class="mb-3 row">
            <label for="example-text-input" class="col-md-2 col-form-label">
              Location (coordinates)<b style="color: red">*</b>
            </label>
            <div class="col-md-10">
              <input
                class="form-control"
                type="text"
                name="coordinates"
                id="coordinates"
                value="<%= formData && formData.location ? formData.location.coordinates : '' %>"
              />
            </div>
          </div>

          <div id="map" class="map"></div>

          <div class="mt-5 mb-3 row">
            <label for="example-text-input" class="col-md-2 col-form-label">
            </label>
            <div class="col-md-10">
              <button type="submit" class="btn btn-primary">
                <i
                  class="mdi mdi-content-save me-1"
                  style="font-size: 18px"
                ></i>
                Save
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="/assets/libs/@ckeditor/ckeditor5-build-classic/build/ckeditor.js"></script>
<script src="/assets/js/pages/form-editor.init.js"></script>

<%- contentFor('FooterJs') %> <%- contentFor('BottomJs') %>

<script>
  function initMap() {
    let marker;
    let initialLocation = { lat: 40.7128, lng: -74.006 };

    const input = document.querySelector('#coordinates');
    if (input.value) {
      const coordinates = input.value.split(',');
      initialLocation = {
        lat: parseFloat(coordinates[1]),
        lng: parseFloat(coordinates[0]),
      };
    }

    let map = new google.maps.Map(document.getElementById('map'), {
      center: initialLocation,
      zoom: 8,
    });

    if (input.value) {
      const coordinates = input.value.split(',');
      marker = new google.maps.Marker({
        position: {
          lat: parseFloat(coordinates[1]),
          lng: parseFloat(coordinates[0]),
        },
        map: map,
      });
    }

    map.addListener('click', function (event) {
      let latitude = event.latLng.lat();
      let longitude = event.latLng.lng();

      const input = document.querySelector('#coordinates');
      input.value = longitude + ',' + latitude;

      if (marker) {
        marker.setMap(null);
      }

      marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
      });
    });
  }

  function viewMap(id) {
    let marker;
    let initialLocation = { lat: 40.7128, lng: -74.006 };
    document.getElementById('map' + id).style.display = 'block';
    document.getElementById('openMap' + id).style.display = 'none';
    let closeBtn = document.getElementById('closeMap' + id);
    closeBtn.setAttribute('style', 'display: block !important;');

    const input = document.querySelector('#coordinates' + id);
    if (input.value) {
      const coordinates = input.value.split(',');
      initialLocation = {
        lat: parseFloat(coordinates[1]),
        lng: parseFloat(coordinates[0]),
      };
    }

    let map = new google.maps.Map(document.getElementById('map' + id), {
      center: initialLocation,
      zoom: 8,
    });

    if (input.value) {
      const coordinates = input.value.split(',');
      marker = new google.maps.Marker({
        position: {
          lat: parseFloat(coordinates[1]),
          lng: parseFloat(coordinates[0]),
        },
        map: map,
      });
    }

    map.addListener('click', function (event) {
      let latitude = event.latLng.lat();
      let longitude = event.latLng.lng();

      const input = document.querySelector('#coordinates' + id);
      input.value = longitude + ',' + latitude;

      if (marker) {
        marker.setMap(null);
      }

      marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
      });
    });
  }

  function closeMap(id) {
    document.getElementById('map' + id).style.display = 'none';
    document.getElementById('openMap' + id).style.display = 'block';
    let closeBtn = document.getElementById('closeMap' + id);
    closeBtn.setAttribute('style', 'display: none !important;');
  }
</script>
<script
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCxJfQjXrBR7iCioJLyRAOxQi6NJBjf3RI&callback=initMap"
  async
  defer
></script>
